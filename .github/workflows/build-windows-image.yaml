name: build-windows-image
on:
  push:
    tags:
      - "v*"
jobs:
  build-windows-image:
    needs: [build-jar-job]
    name: 'Build Windows Image'

    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ilammy/msvc-dev-cmd@v1.9.0
      - uses: microsoft/setup-msbuild@v1
      - uses: ayltai/setup-graalvm@v1
        with:
          java-version: 11
          graalvm-version: 21.1.0
          native-image: true

      - name: 'Get Version Number'
        run: |
          echo "VERSION=$(./gradlew properties -q | grep "version:" | awk '{print $2}')" >> $GITHUB_ENV
        shell: bash

      - name: 'Get JAR Artifact'
        uses: actions/download-artifact@v2-preview
        with:
          name: 'aq-cli-${{env.VERSION}}-all.jar'

      - name: 'Copy Jar Artifact'
        run: |
          mkdir build\native-image
          copy aq-cli-${{env.VERSION}}-all.jar build\native-image\aq-cli-${{env.VERSION}}-all.jar
          dir build\native-image

      - name: 'Build Native Image'
        shell: powershell
        run: ./gradlew nativeImage

      - name: 'Get Release URL'
        if: contains(github.ref, 'v')
        uses: actions/download-artifact@v2-preview
        with:
          name: 'upload_url.txt'

      - name: 'Get Upload URL'
        if: contains(github.ref, 'v')
        run: |
          echo "UPLOAD_URL=$(cat upload_url.txt)" >> $GITHUB_ENV
        shell: bash

      - name: 'Publish Windows Image'
        if: success()
        uses: actions/upload-artifact@v2-preview
        with:
          name: 'aq.exe'
          path: 'build/native-image/aq.exe'

      - name: 'Release Windows Image Asset'
        if: success() && contains(github.ref, 'v')
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          upload_url: ${{env.UPLOAD_URL}}
          asset_name: 'aq.exe'
          asset_path: 'build/native-image/aq.exe'
          asset_content_type: application/octet-stream